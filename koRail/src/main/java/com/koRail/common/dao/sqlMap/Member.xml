<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQLMap 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
    
<sqlMap namespace="Member">
	<resultMap class="com.koRail.common.to.MemberBean" id="memberResultMap">
		<result property="id" column="ID"/>
		<result property="nm" column="NM"/>
		<result property="zipCode" column="ZIP_CODE"/>
		<result property="addrs" column="ADRES"/>
		<result property="detailAddrs" column="DETAIL_ADRES"/>
		<result property="telNo" column="TELNO"/>
		<result property="mbtlnum" column="MBTLNUM"/>
		<result property="emal" column="EMAIL"/>
		<result property="gndr" column="GNDR"/>
		<result property="rgsde" column="RGSDE"/>
		<result property="updde" column="UPDDE"/>
	</resultMap>
	
	<!-- ID 중복확인 -->
	<procedure id="selectMemberId" parameterClass="java.util.Map">
		{ CALL PK_CMMN.SP_ID_CHECK(
			#id,mode=IN#,
			#rtId,mode=OUT,jdbcType=VARCHAR#,
			#rtCode,mode=OUT,jdbcType=VARCHAR#,
			#rtMsg,mode=OUT,jdbcType=VARCHAR#
		) }
		
		/*************************************************************
	    * 이름     : SP_ID_CHECK
	    * 설명     : 회원 삭제
	    * 파라미터 : 아이디, 에러 코드(0 : 성공, 1 : 에러), 에러 메세지
	    *************************************************************/
	</procedure>

	<!-- 공통 SQL -->
	<sql id="memberTmp">
		SELECT	ID															/* 아이디 */,
				NM															/* 성명 */,
				TO_CHAR(ZIP_CODE, '999,999') 					AS ZIP_CODE /* 우편번호 */,
				ADRES 														/* 주소 */,
				DETAIL_ADRES 												/* 상세주소 */,
				NVL(TELNO, '--') 								AS TELNO	/* 전화번호 */,
				NVL(MBTLNUM, '--') 								AS MBTLNUM	/* 휴대전화번호 */,
				NVL(EMAIL, '--') 								AS EMAIL	/* 이메일 */,
				CASE 
                	WHEN GNDR = 0 THEN '남'
                    WHEN GNDR = 1 THEN '여'
              	END												AS	GNDR	/* 성별 */,
				TO_CHAR(RGSDE, 'YYYY-MM-DD HH24:MI') 			AS RGSDE	/* 가입일 */,
				NVL(TO_CHAR(UPDDE, 'YYYY-MM-DD HH24:MI'), '--') AS UPDDE	/* 개인정보 수정일 */
		FROM	MEMBER
	</sql>

	<!-- 회원 조회 -->
	<select id="selectMember" resultMap="memberResultMap" parameterClass="com.koRail.common.to.MemberBean">
		<include refid="memberTmp"/>
		<isEqual property="srcType" compareValue="ALL">
			ORDER BY RGSDE DESC
		</isEqual>
		<isEqual property="srcType" compareValue="id">
			WHERE ID LIKE '%' || #srcText# || '%'
			ORDER BY RGSDE DESC
		</isEqual>
		<isEqual property="srcType" compareValue="name">
			WHERE NM LIKE '%' || #srcText# || '%'
			ORDER BY RGSDE DESC
		</isEqual>
		<isEqual property="srcType" compareValue="rgsde">
			WHERE TO_CHAR(RGSDE, 'YYYY-MM-DD') >= #srcDate1#
        	AND	  TO_CHAR(RGSDE, 'YYYY-MM-DD') &lt;= #srcDate2#
        	ORDER BY RGSDE DESC
		</isEqual>
		<isEqual property="srcType" compareValue="updde">
			WHERE TO_CHAR(UPDDE, 'YYYY-MM-DD') >= #srcDate1#
        	AND	  TO_CHAR(UPDDE, 'YYYY-MM-DD') &lt;= #srcDate2#
        	ORDER BY UPDDE DESC
		</isEqual>
		<isNull property="srcType">
			<isNotNull property="formType">
				WHERE ID = #srcText#
			</isNotNull>
		</isNull>
	</select>
	
	<!-- 회원 가입 -->
	<insert id="insertMember" parameterClass="com.koRail.common.to.MemberBean">
		INSERT INTO MEMBER(
			ID				/* 아이디 */,
			PASSWORD		/* 비밀번호 */,
			NM				/* 성명 */,
			ZIP_CODE		/* 우편번호 */,
			ADRES 			/* 주소 */,
			DETAIL_ADRES 	/* 상세주소 */,
			TELNO			/* 전화번호 */,
			MBTLNUM			/* 휴대전화번호 */,
			EMAIL			/* 이메일 */,
			GNDR			/* 성별 */,
			RGSDE			/* 가입일 */
		)VALUES(
			#id#,
			#password#,
			#nm#,
			#zipCode#,
			#addrs#,
			#detailAddrs#,
			#telNo#,
			#mbtlnum#,
			#emal#,
			#gndr#,
			SYSDATE
		)
	</insert>
	
	<!-- 개인정보 수정 -->
	<update id="updateMember" parameterClass="com.koRail.common.to.MemberBean">
		<!-- 개인정보 수정 -->
		<isNull property="password">
			UPDATE MEMBER
			SET	NM = #nm#						/* 성명 */,
				ZIP_CODE = #zipCode#			/* 우편번호 */,
				ADRES = #addrs#					/* 주소 */,
				DETAIL_ADRES = #detailAddrs#	/* 상세주소 */,
				TELNO = #telNo#					/* 전화번호 */,
				MBTLNUM = #mbtlnum#				/* 휴대전화번호 */,
				EMAIL = #emal#					/* 이메일 */,
				GNDR = #gndr#					/* 성별 */,
				UPDDE = SYSDATE					/* 개인정보 수정일 */
		</isNull>
		<!-- 비밀번호 수정 -->
		<isNotNull property="password">
			UPDATE MEMBER
			SET PASSWORD = #password#
			WHERE ID = #id#
		</isNotNull>
	</update>
	
	<!-- 회원 삭제 -->
	<procedure id="deleteMember" parameterClass="com.koRail.common.to.MemberBean">
		{ CALL PK_ADMIN_MEMBER_MNG.SP_DLT_MEMBER(
			#id,mode=IN#,
			#rtCode,mode=OUT,jdbcType=VARCHAR#,
			#rtMsg,mode=OUT,jdbcType=VARCHAR#
		) }
		
		/*************************************************************
	    * 이름     : SP_DLT_MEMBER
	    * 설명     : 회원 삭제
	    * 파라미터 : 아이디, 에러 코드(0 : 성공, 1 : 에러), 에러 메세지
	    *************************************************************/
	</procedure>
</sqlMap>